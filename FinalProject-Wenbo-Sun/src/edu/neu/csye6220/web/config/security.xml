<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<security:authentication-manager>

		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				authorities-by-username-query="select username, authority from users where binary username = ?"
				users-by-username-query="select username, password, enabled from users where binary username = ?"
				id="jdbcUserService" />
			<!-- <security:user-service> <security:user name="user" authorities="ROLE_USER, 
				ROLE_ADMIN" password="password" /> </security:user-service> -->
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http use-expressions="true" auto-config="true">
		<security:intercept-url pattern="/admin"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/managementuser"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/management"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/confirm"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/confirmed"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/confirmappointment"
			access="hasRole('ROLE_ADMIN')" />

		<security:intercept-url pattern="/map"
			access="hasRole('ROLE_PRIME') or hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/newappointment"
			access="hasRole('ROLE_PRIME') or hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/appointmentdeleted"
			access="hasRole('ROLE_PRIME') or hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/docreate"
			access="hasRole('ROLE_PRIME') or hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/appointmentcreated"
			access="hasRole('ROLE_PRIME') or hasRole('ROLE_ADMIN')" />

		<security:intercept-url pattern="/commentcreated"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/checkcomment"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/comment"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/newcomment"
			access="isAuthenticated()" />

		<security:intercept-url pattern="/" access="permitAll" />
		<security:intercept-url pattern="/logout"
			access="permitAll" />
		<security:intercept-url pattern="/newaccount"
			access="permitAll" />
		<security:intercept-url pattern="/createaccount"
			access="permitAll" />
		<security:intercept-url pattern="/home"
			access="permitAll" />
		<security:intercept-url pattern="/accountcreated"
			access="permitAll" />
		<security:intercept-url pattern="/static/**"
			access="permitAll" />
		<security:intercept-url pattern="/login"
			access="permitAll" />
		<security:intercept-url pattern="/myappointment"
			access="permitAll" />
		<security:intercept-url pattern="/**" access="denyAll" />
		<security:form-login login-page="/login"
			authentication-failure-url="/login?error=true" />
		<security:logout logout-success-url="/logout" />
		<security:access-denied-handler
			error-page="/denied" />
		<security:remember-me key="appointmentsAppKey"
			user-service-ref="jdbcUserService" />
	</security:http>
	<security:global-method-security
		secured-annotations="enabled"></security:global-method-security>
</beans>
